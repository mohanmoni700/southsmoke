diff --git a/vendor/mageplaza/module-multiple-coupons/Plugin/Model/RuleCollection.php b/vendor/mageplaza/module-multiple-coupons/Plugin/Model/RuleCollection.php
index bf0e2061a..308f7ae1b 100644
--- a/vendor/mageplaza/module-multiple-coupons/Plugin/Model/RuleCollection.php
+++ b/vendor/mageplaza/module-multiple-coupons/Plugin/Model/RuleCollection.php
@@ -27,6 +27,7 @@ use Magento\Quote\Model\Quote\Address;
 use Magento\SalesRule\Model\ResourceModel\Rule\Collection;
 use Magento\SalesRule\Model\Rule;
 use Mageplaza\MultipleCoupons\Helper\Data;
+use Magento\Store\Model\StoreManagerInterface;
 
 /**
  * Class RuleCollection
@@ -44,18 +45,26 @@ class RuleCollection
      */
     protected $timezone;
 
+    /**
+     * @var StoreManagerInterface
+     */
+    protected $storeManager;
+
     /**
      * RuleCollection constructor.
      *
      * @param Data $data
      * @param TimezoneInterface $timezone
+     * @param StoreManagerInterface $storeManager
      */
     public function __construct(
         Data $data,
-        TimezoneInterface $timezone
+        TimezoneInterface $timezone,
+        StoreManagerInterface $storeManager
     ) {
         $this->data     = $data;
         $this->timezone = $timezone;
+        $this->storeManager = $storeManager;
     }
 
     /**
@@ -72,25 +81,26 @@ class RuleCollection
     public function aroundSetValidationFilter(
         Collection $subject,
         Closure $proceed,
-        $websiteId,
-        $customerGroupId,
-        $couponCode = '',
-        $now = null,
+                   $websiteId,
+                   $customerGroupId,
+                   $couponCode = '',
+                   $now = null,
         Address $address = null
     ) {
-        if (!$this->data->isApplyFor($websiteId) || !strlen($couponCode)) {
+        $storeId = $this->storeManager->getStore()->getStoreId();
+        if (!$this->data->isApplyFor($storeId) || !strlen($couponCode)) {
             return $proceed($websiteId, $customerGroupId, $couponCode, $now, $address);
         }
 
         $coupons = $this->data->formatCodeArray($couponCode);
 
-        if (!empty($intersectCodes = array_intersect($coupons, $this->data->getUniqueCodes($websiteId)))) {
+        if (!empty($intersectCodes = array_intersect($coupons, $this->data->getUniqueCodes($storeId)))) {
             $coupons = [end($intersectCodes)];
         }
 
         /** @var Collection $result */
         $result = $proceed($websiteId, $customerGroupId, $couponCode, $now, $address);
-        $limit  = $this->data->getLimitQty($websiteId);
+        $limit  = $this->data->getLimitQty($storeId);
         if ($limit && count($coupons) > $limit) {
             return $result;
         }
@@ -123,7 +133,7 @@ class RuleCollection
             )->joinInner(
                 ['customer_group_ids' => $saleRuleCustomerGroupTable],
                 $connection->quoteInto(
-                    'main_table.rule_id = customer_group_ids.'
+                    'main_table.row_id = customer_group_ids.'
                     . $srcgColumnName .
                     ' AND customer_group_ids.customer_group_id = ?',
                     $customerGroupId
